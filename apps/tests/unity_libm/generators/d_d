#!/usr/bin/env python

import sys

vectors = sys.argv[1]
func = sys.argv[2]
checker = sys.argv[3]

print '''
/****************************************************************************
 * Name: {test}
 *
 * Description:
 *   Verify {func}() function
 *
 * Input Parameters:
 *   None
 *
 * Returned Value:
 *   None
 *
 * Assumptions/Limitations:
 *   None
 *
 ****************************************************************************/
TEST({suite}, {test})
{{
  static struct d_d t[] =
    {{
#include "{vectors}/{func}.h"
    }};
  double y;
  float d;
  int i;
  struct d_d *p;

  for (i = 0; i < sizeof(t) / sizeof(*t); i++)
    {{
      p = t + i;

      if (p->r < 0)
        {{
          continue;
        }}
      y = {func} (p->x);
      d = ulperr (y, p->y, p->dy);
      if (!{checker}(y, p->y, p->r))
        {{
          char buffer[128];
          snprintf (buffer, sizeof(buffer),
                    "%s:%d: %s {func}(%.8g) want %.8g got %.8g ulperr %.3f = %.8g + %.8g",
                    p->file, p->line, rstr (p->r), p->x, p->y, y, d, d - p->dy,
                    p->dy);
          TEST_FAIL_MESSAGE(buffer);
        }}
    }}
}}
'''.format(suite=vectors.title(), vectors=vectors, test=func.title(), func=func, checker=checker)
